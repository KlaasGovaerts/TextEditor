package texteditor;


import static org.junit.Assert.*;

import javax.swing.JTextArea;

import org.junit.Before;
import org.junit.Test;

/**
 * Test class for {@link texteditor.Texed}.
 * @author Klaas Govaerts
 *
 */
public class TexedTest {
	private Texed texed;
	private JTextArea textArea;
	
	@Before
	public void setUp() throws Exception {
		texed=new Texed();
		textArea=texed.getTextArea();
		textArea.insert("<tag1><tag2>tekst / teskt <tag3> teskt </tag3>",0);
		texed.updateButtons();
	}

	/**
	 * Test method for {@link texteditor.Texed#generateStack()}.
	 */
	@Test
	public void testGenerateStack() {
		StackLL<String> actual=texed.generateStack();
		StackLL<String> expected=new StackLL<String>();
		expected.push("tag1");
		expected.push("tag2");
		
		for(int i=0;i<2;i++){
		assertTrue(expected.pop().equals(actual.pop()));
		}
	}

	/**
	 * Test method for {@link texteditor.Texed#closeTag()}.
	 */
	@Test
	public void testCloseTag() {
		texed.closeTag();
		assertEquals("<tag1><tag2>tekst / teskt <tag3> teskt </tag3></tag2>",textArea.getText());
		texed.closeTag();
		assertEquals("<tag1><tag2>tekst / teskt <tag3> teskt </tag3></tag2></tag1>",textArea.getText());
		texed.closeTag();
		assertEquals("<tag1><tag2>tekst / teskt <tag3> teskt </tag3></tag2></tag1>",textArea.getText());
	}

	/**
	 * Test method for {@link texteditor.Texed#showUnclosedTags()}.
	 */
	@Test
	public void testShowUnclosedTags() {
		assertTrue(texed.getInfoBoxText().equals("2 Unclosed tags"));
		texed.closeTag();
		assertTrue(texed.getInfoBoxText().equals("1 Unclosed tag"));
		texed.getTextArea().append("</tag1>");
		texed.updateButtons();
		assertTrue(texed.getInfoBoxText().equals("0 Unclosed tags"));
	}
	
	// A Test for undo and redo can't be written since a DocumentEvent is only generated by a manual user input. This is also the case for RemoveUpdate and InsertUpdate.
}
